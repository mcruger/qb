
<% if session[:user_id].blank? %>

  <script type="text/javascript">
    window.location.href="/"
  </script>

<% else %>
  
<script>
//initializes game for play
//hides everything and starts timer
$( document ).ready(function() {

	var questionIDs = new Array();
	var is_first = true;
	var cur_classID;
	$("#results").toggle();
	$('.question').each( function(i,e) { 
		cur_classID = "";
    	cur_classID = $(e).attr('id');

    	questionIDs.push(cur_classID);
		if(is_first != true){
			$("div#"+cur_classID).toggle();
		}
		is_first = false;
	});
	
	//start timer - this is the game's total time to be played
	//each question will then run on a separate timer that will handle the "peeling off" of wrong answers

	//need a few global vars to denote what question the interval is on 
	q_index_GLOBAL = 0;
	q_index_max_GLOBAL = questionIDs.length;
	is_first_GLOBAL = true;
	var intervalVal = 22000; //add 2 seconds for delay

		//note, hardcoded intervalVal, wasn't coming through for some reason...
		$('.answer').click(function(intervalVal){

			var id = $(this).attr('id');
			if (id.indexOf("true") !== -1){
				cur_score = $('#score').val(); 
				//alert(cur_score);
				s = $('#time').val();
				var date = new Date();
				var ntime = date.getTime();
				var points = 22000 - (ntime - s);
				//alert("correct, score + " + points);
				$('#single_score').val(points*1);

			}else{
				//alert("wrong");
				$('#single_score').val(0);
			}

		});


	displayQuestion(questionIDs,intervalID, intervalVal);
	var intervalID=setInterval(function(){
	var q_start = new Date();
	displayQuestion(questionIDs, intervalID, intervalVal, q_start)}, intervalVal);

});


//interval function that times each question
function displayQuestion(questionIDs, intervalID, intervalVal)
{
	//alert($('#single_score').val());
	//update score from previous question
	var single = $('#single_score').val();
	$('#single_score').val(0);
	var points = $('#score').val();
	$('#score').val( (single*1+points*1) );
				
	//init blank array to store question IDs
	//for *this question 
	var wrong_answerIDs = new Array();
	var numAnswers = 0;

		$('#timer_'+questionIDs[(q_index_GLOBAL-1)]).html("timer");
		
		//display timer
		(function timerLoop (i, questionIDs) {          
   			var test1 = setTimeout(function () {   
      		//alert('hello');          
      		$('#timer_'+questionIDs[(q_index_GLOBAL-1)]).html(i);  
      		clearTimeout(test1);              
      		if (--i >= 0) timerLoop(i, questionIDs);      //  decrement i and call myLoop again if i > 0
   		}, 1000)
		})(((intervalVal-2000)/1000), questionIDs);
		
	if(q_index_GLOBAL != q_index_max_GLOBAL){

		//for every interval (other than first), hide current div, show next div
		if(is_first_GLOBAL==false){

			$("#"+questionIDs[(q_index_GLOBAL-1)]).toggle();
			$("#"+questionIDs[(q_index_GLOBAL)]).insertBefore("#"+questionIDs[(q_index_GLOBAL-1)]);
			$("#"+questionIDs[(q_index_GLOBAL)]).toggle("slow");
		
		}
		is_first_GLOBAL = false;

		//put time in hidden field 'time' to keep track of time passed since question start
		var d = new Date();
		var n = d.getTime();
		$('#time').val(n);
		
		//get all answer values for this question
		//note class syntax matches answer class - answer_q_id
		$('.answer_'+questionIDs[q_index_GLOBAL]).each( function(i,e) {
				cur_classID = "";
    			cur_classID = $(e).attr('id');
    			//only grab answers that are incorrect (we're peeling them off)
    			if(cur_classID.indexOf("false") !== -1){
	    			wrong_answerIDs.push(cur_classID);
	    		}
		});

		//randomize array of wrong answers so there's no order to peeling off 
		wrong_answerIDs.sort(function(){
			return Math.round(Math.random()) - 0.5;
		});
		
		numAnswers = wrong_answerIDs.length;

		//loop w/ wait functionality to "peel" incorrect answers
		(function peelAnswersLoop (i, wrong_answerIDs) {          
   			var test = setTimeout(function () {   
      		//alert(wrong_answerIDs[i-1]);         
      		$('#'+wrong_answerIDs[i-1]).hide();
      		clearTimeout(test);	
      		if (--i >= 0) peelAnswersLoop(i, wrong_answerIDs);      //  decrement i and call again if i > 0
   			}, (intervalVal/3.3)) 
		})(wrong_answerIDs.length, wrong_answerIDs);	
		
		q_index_GLOBAL++;
	}else{
		//alert("END OF GAME");
		$("#"+questionIDs[(q_index_GLOBAL-1)]).toggle();
		$("#results").insertBefore("#"+questionIDs[(q_index_GLOBAL-1)]);
		clearInterval(intervalID);
		showResults();
	}
}


function showResults(){
	alert("here");
	//wraps up the results and shows them to user
	//note: assuming order of questions spit out to page doesn't change, question #s follow order in page
	$('#res_provide_id').val($('#provide_id').val());
	$('#res_user_id').val($('#user_id').val());
	$('#res_score').val($("#score").val());
	$('#results').toggle();
}



</script>
<div class="row">
		<div class="large-12 columns">
		<!-- hidden field to hold time stamp of when question started -->
		<%= hidden_field_tag 'time', 0 %>
		<%= hidden_field_tag 'single_score', 0 %>


		<div class="score_pane" id='score_pane' style = 'font-size: 40px; color: blue;'>Score:
		<%= text_field_tag 'score', 0 %>
		<%= hidden_field_tag 'provide_id', @p_id %>
        <%= hidden_field_tag 'user_id', @user_id %>

		</div>

		<% q_counter = 1 %>
		<% @questions.each do |q| %>

			<div class="question" id='q_<%=q.id%>'>
				<span class="timer" id='timer_q_<%=q.id%>' style = 'font-size: 30px; color: black;'>20</span>

				<div class="question_num" style = 'font-size: 25px'> Question Number: <%= q_counter %></div>
				<h1><%= q.question %></h1>
				<!--need to get all answers for this question (by quesiton_id)-->
				<br>
				 <% ans_array = q.answers %>
				 <% ans_array = ans_array.shuffle %>
				 <% ans_array.each do |a| %>
				 	
				 	<%= radio_button_tag q.id.to_s(), a.id.to_s()+'_'+a.is_correct.to_s(), false, class: "answer"%>
				 	<!-- note that answer_q_id is used for class
				 	so we can easily grab all answers -->
				   <span class="answer_q_<%=q.id%>" id='<%=a.id%>_<%=a.is_correct%>' style="font-size: 20px; margin-bottom: 0px;"><%= a.answer %></span>

			       <br>
			    <% end %>

			</div>
			<br>
			<br>
			<% q_counter += 1 %>
		<% end %>
	</div>
	<div id="results">

	  Thanks for playing!
		
	<%= form_tag(update_results_path, :method => 'post') do %>
      <%= hidden_field_tag :res_provide_id, 0 %>
      <%= hidden_field_tag :res_user_id, 0 %>
      <%= hidden_field_tag :res_score, 0 %>
      <br>
      <button type="submit" class="button [tiny small large]">Submit your score!</button>
    	</form>
	<% end%>
		

	</div>
</div>

<% end %>
